name: Rust Checks

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

concurrency:
  group: rust-checks-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  changed-files:
    name: Check Changed Files
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed.outputs.any_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if any Rust files have changed
        id: changed
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c
        with:
          files: |
            **.rs
            **Cargo.toml
            **Cargo.lock

  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.any_changed == 'true'
    strategy:
      fail-fast: false
      matrix:
        job: [format, lint, test]
        include:
          - job: format
            command: cargo fmt --all -- --check
          - job: lint
            command: cargo clippy --all-targets --all-features -- -D warnings
          - job: test
            command: cargo test --all-targets --all-features
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Problem Matchers
        run: echo "::add-matcher::${{ github.workspace }}/.github/matchers.json"

      - name: Cache Rust Workspace
        uses: Swatinem/rust-cache@v2

      - name: Run ${{ matrix.job }}
        run: ${{ matrix.command }}
